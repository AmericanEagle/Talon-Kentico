@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.ChangePassword.ChangePasswordViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers

<div class="@Model.CssClass">
    @if (Model.PasswordChanged) {
        <h3>@Html.Resource("ChangePasswordSuccess")</h3>
    } else {
        <h3>@Html.Resource("ChangePasswordHeader")</h3>
        
		if (!string.IsNullOrEmpty(Model.ExternalProviderName)) {
            <div>@string.Format(Html.Resource("ExternalProviderMessage"), Model.ExternalProviderName)</div>
        } else {
			using (Html.BeginFormSitefinity("SetChangePassword", "ChangePassword")) {
				if (!string.IsNullOrEmpty(Model.Error)) {
					<div class="alert alert-danger">@Model.Error</div>
				}
		
				<div class="form-group">
					<label>
						<span class="form-control-label required-indicator">@Html.Resource("ChangePasswordOldPassword")</span>
				   		@Html.PasswordFor(u => u.OldPassword, new { @class = "form-control" })
					</label>
				</div>
				<div class="form-group">
					<label>
						<span class="form-control-label required-indicator">@Html.Resource("ChangePasswordNewPassword")</span>
						@Html.PasswordFor(u => u.NewPassword, new { @class = "form-control" })
					</label>
				</div>
				<div class="form-group">
					<label>
						<span class="form-control-label required-indicator">@Html.Resource("ChangePasswordRepeatPassword")</span>
						@Html.PasswordFor(u => u.RepeatPassword, new { @class = "form-control" })
					</label>
				</div>    
				
			   <button type="submit" class="btn btn-primary">@Html.Resource("ChangePasswordSaveButton")</button> 
			}
		}
    }
</div>