@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel

@using Telerik.Sitefinity.Frontend.Events.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Web.DataResolving;

@{
    var eventItem = @Model.Item;
    var eventFields = eventItem.Fields;
    bool isCancelled = @eventFields.IsCancelled;
}

<article class="events module detail @Model.CssClass">
    <h1>
        @eventFields.Title
        @if(isCancelled) { <span>[CANCELLED]</span> }
    </h1>
    <span style="background: @eventItem.EventCalendarColour()"></span>

    @if(@eventFields.Image != null) {
        <img src="@eventFields.Image.Fields.MediaUrl" alt="@eventFields.Image.Fields.AlternativeText" />
    }

    @**** Dates ****@
    @{
        var eventStart = @eventFields.EventStart;
        var eventEnd = @eventFields.EventEnd;
        var startDate = eventStart.ToString("MMMM dd, yyyy HH:mm tt");
        var endDate = eventEnd.ToString("MMMM dd, yyyy HH:mm tt");
    }
    <h2>@Html.Resource("EventDates")</h2>

    @if(startDate.Length > 0) {
        <p>
            <strong>Starts:</strong>
            <time class="event-start">@startDate</time>
        </p>
    }
    @if(endDate.Length > 0) {
        <p>
            <strong>Ends:</strong>
            <time class="event-end">@endDate</time>
        </p>
    }

    @* @eventItem.EventDates() *@

    @**** Content ****@
    <h2>@Html.Resource("EventDescription")</h2>
    @* @Html.Raw(Model.Item.Fields.Summary) *@

    @if (!string.IsNullOrEmpty(eventFields.Description)) {
        <p>@eventFields.Description</p>
    }

    @if (!string.IsNullOrEmpty(Model.Item.Fields.Content)) {
        <p>@Html.Raw(eventFields.Content)</p>
    }

    @**** Location ****@
    @{
        var eventLocation = eventFields.Location;
        var eventCity = eventFields.City;
        var eventCountry = eventFields.Country;
        var eventStreet = eventFields.Street;

        bool hasLocation = !string.IsNullOrEmpty(eventLocation);
        bool hasCity = !string.IsNullOrEmpty(eventCity);
        bool hasCountry = !string.IsNullOrEmpty(eventCountry);
        bool hasStreet = !string.IsNullOrEmpty(eventStreet);
    }

    @if(hasLocation || hasCity || hasCountry || hasStreet) {
    <section class="event-location" aria-label="@Html.Resource("EventLocation")">
        <h2>@Html.Resource("EventLocation")</h2>
        @if (hasLocation) {
            <h3>@eventLocation</h3>
        }
        @if (hasCity || hasCountry) {
        <address>
            @if (hasStreet) { <div>@eventStreet</div> }
            @if (hasCity && hasCountry) {
                <div>@eventCity<span>,</span> @eventCountry</div>
            } else {
                @(hasCity ? eventCity : eventCountry)
            }
        </address>
        }
    </section>
    }

    @**** Contact ****@
    @{
        var contactName = eventFields.ContactName;
        var contactPhone = eventFields.ContactPhone;
        var contactCell = eventFields.ContactCell;
        var contactEmail = eventFields.ContactEmail;
        var contactWeb = eventFields.ContactWeb;

        bool hasContactName = !string.IsNullOrEmpty(contactName);
        bool hasContactPhone = !string.IsNullOrEmpty(contactPhone);
        bool hasContactCell = !string.IsNullOrEmpty(contactCell);
        bool hasContactEmail = !string.IsNullOrEmpty(contactEmail);
        bool hasContactWeb = !string.IsNullOrEmpty(contactWeb);
    }

    @if(hasContactName || hasContactPhone || hasContactCell || hasContactEmail || hasContactWeb) {
    <section aria-label="@Html.Resource("EventContact")">
        <h2>@Html.Resource("EventContact")</h2>
        @if (hasContactName) {
            <h3>@contactName</h3>
        }
        <ul>
        @if (hasContactPhone) {
            <li><strong>Phone: </strong><a href="tel:@contactPhone">@contactPhone</a></li>
        }
        @if (hasContactCell)  {
            <li><strong>Cell: </strong><a href="tel:@contactCell">@contactCell</a></li>
        }
        @if (hasContactEmail) {
            <li><strong>Email: </strong><a href="mailto:@contactEmail" target="_blank">@contactEmail</a></li>
        }
        @if (hasContactWeb) {
            <li><strong>Web: </strong><a href="@contactWeb" target="_blank">@contactWeb</a></li>
        }
        </ul>
    </section>
    }

    @**** Add to Calendar ****@
    @if (ViewBag.AllowCalendarExport && !isCancelled) {
        <div>
            <strong>@Html.Resource("AddTo")</strong>
            <ul>
                <li><a href="@eventItem.GenerateOutlookUrl()" target="_blank">@Html.Resource("OutlookEventExporterTitle")</a></li>
                <li><a href="@eventItem.GenerateICalUrl()" target="_blank">@Html.Resource("ICalEventExporterTitle")</a></li>
                <li><a href="@eventItem.GenerateGoogleUrl()" target="_blank">@Html.Resource("GoogleEventExporterTitle")</a></li>
            </ul>
        </div>
    }


    <p>@Html.CommentsCount(string.Empty, eventItem.DataItem)</p>

    @{
        if (Model.EnableSocialSharing) {
            var item = eventItem.DataItem as Telerik.Sitefinity.Model.IHasTitle;
            @Html.SocialShareOptions(item);
        }
    }

    @Html.CommentsList(eventItem.DataItem)
</article>

@**** Schema / json-ld ****@

<script type="application/ld+json">
{
  "@@context": "http://schema.org",
  "@@type": "Event",
  "@@id": "@eventItem.DefaultUrl",
  "name": "@eventFields.Title",
  "startDate": "@startDate",
  "location": {
    "@@type": "Place",
    "name": "@eventLocation",
    "address": {
      "@@type": "PostalAddress",
      "streetAddress": "@eventStreet",
      "addressLocality": "@eventCity",
      "addressCountry": "@eventCountry"
    }
  },
  "description": "@Html.Raw(eventFields.Summary)",
  "endDate": "@endDate"
}
</script>

@if(@eventFields.Image != null) {
<script type="application/ld+json">
{
"@@context": "http://schema.org",
"@@id": "@eventItem.DefaultUrl",
"image": "@eventFields.Image.Fields.MediaUrl"
}
</script>
}