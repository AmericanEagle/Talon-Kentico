@model Telerik.Sitefinity.Frontend.Navigation.Mvc.Models.INavigationModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Navigation.Mvc.Models;
@using Telerik.Sitefinity.Modules.Pages;

@*Add scripts and stylesheets*@

<nav class="section-nav nav-column @Model.CssClass" aria-label="Side Menu">
    @* @Html.Action("GetView", new { viewName = "Dropdown",  model= Model}) *@
    @*
    <a href="#" class="toggle-menu">
        <span><span class="visually-hidden">Menu</span></span>
    </a>
    *@
    
    <ul class="cm-menu">
        @foreach (var node in Model.Nodes) {
            @RenderSubLevelsRecursive(node);
        }
    </ul>
</nav>

@*Here is specified the rendering for the sub levels*@
@helper RenderSubLevelsRecursive(NodeViewModel node) {
     <li class="@GetClass(node)">
        <a href="@node.Url" target="@node.LinkTarget">@node.Title</a>

        @if (node.ChildNodes.Count > 0) {
            <ul>
                @foreach (var childNode in node.ChildNodes) {
                    @RenderSubLevelsRecursive(childNode)
                }
            </ul>
        }
    </li>
}

@*Resolves the class that will be added for each node depending whether it is selected*@
@helper GetClass(NodeViewModel node) {
    if (node.IsCurrentlyOpened) {
        @Html.Raw("active");
    } else if (node.HasChildOpen) {
        @Html.Raw("active");
    }
}